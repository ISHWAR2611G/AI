def chooseOne(arr1, arr2, arr3, arr4, goal):
    a1 = a2 = a3 = a4 = 0
    for i in range(len(goal)):
        for j in range(len(goal[i])):
            if arr1[i][j] != goal[i][j]:
                a1 += 1
            if arr2[i][j] != goal[i][j]:
                a2 += 1
            if arr3[i][j] != goal[i][j]:
                a3 += 1
            if arr4[i][j] != goal[i][j]:
                a4 += 1

    # Tie-breaking logic: Prefer arr1, then arr2, then arr3
    if a1 <= a2 and a1 <= a3 and a1 <= a4:
        return arr1
    if a2 <= a1 and a2 <= a3 and a2 <= a4:
        return arr2
    if a3 <= a1 and a3 <= a2 and a3 <= a4:
        return arr3
    return arr4

def isMatch(arr, goal):
    return arr == goal

def Astarcode(arr, goal):
    if isMatch(arr, goal):
        print("Goal State Reached:")
        for row in arr:
            print(row)
        return

    flag = False
    arr1 = [[0 for _ in range(3)] for _ in range(3)]
    arr2 = [[0 for _ in range(3)] for _ in range(3)]
    arr3 = [[0 for _ in range(3)] for _ in range(3)]
    arr4 = [[0 for _ in range(3)] for _ in range(3)]

    for x in range(3):
        for y in range(3):
            if arr[x][y] == 0:
                # Copy the current array to each possible move
                for i in range(3):
                    for j in range(3):
                        arr1[i][j] = arr[i][j]
                        arr2[i][j] = arr[i][j]
                        arr3[i][j] = arr[i][j]
                        arr4[i][j] = arr[i][j]

                # Generate possible moves
                if y + 1 < 3:  # Move right
                    arr1[x][y], arr1[x][y + 1] = arr1[x][y + 1], arr1[x][y]
                if y - 1 >= 0:  # Move left
                    arr2[x][y], arr2[x][y - 1] = arr2[x][y - 1], arr2[x][y]
                if x + 1 < 3:  # Move down
                    arr3[x][y], arr3[x + 1][y] = arr3[x + 1][y], arr3[x][y]
                if x - 1 >= 0:  # Move up
                    arr4[x][y], arr4[x - 1][y] = arr4[x - 1][y], arr4[x][y]
                
                flag = True
                break
        if flag:
            break

    # Choose the best state to move towards the goal
    ans = chooseOne(arr1, arr2, arr3, arr4, goal)
    print("Current State:")
    for row in ans:
        print(row)
    print("----")
    Astarcode(ans, goal)

# Test the function
arrgiven = [[1, 2, 3], [0, 4, 6], [7, 5, 8]]
arrgoal = [[1, 2, 3], [4, 5, 6], [7, 8, 0]]

Astarcode(arrgiven, arrgoal)
